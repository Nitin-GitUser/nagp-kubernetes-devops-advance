apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: db-storage-class
  namespace: kubernetes-cluster-nitingoyal
provisioner: kubernetes.io/gce-pd
reclaimPolicy: Retain

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
  namespace: kubernetes-cluster-nitingoyal
spec:
  storageClassName: db-storage-class
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---

apiVersion: v1
kind: Service
metadata:
  name: mysql-headless-service
  namespace: kubernetes-cluster-nitingoyal
spec:
    ports:
    - port: 3306
    selector:
      app: mysql-pod
    clusterIP: None

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-stateful-set
  namespace: kubernetes-cluster-nitingoyal
spec:
  serviceName: mysql-headless-service
  replicas: 1
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app: mysql-pod
  template:
    metadata:
      name: mysql-pod
      labels:
        app: mysql-pod
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        args: ["--default-authentication-plugin=mysql_native_password"]
        ports:
        - containerPort: 3306 
        envFrom:
        - configMapRef:
            name: db-configs
        - secretRef:
            name: db-credentials
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: data-volume
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: db-pvc
